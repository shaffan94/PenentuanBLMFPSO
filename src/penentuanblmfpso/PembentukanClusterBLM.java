/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package penentuanblmfpso;

import Kontroller.FPSO_FCM;
import Kontroller.FCM;
import Kontroller.DokumenManager;
import Model.DataKelayakan;
import Model.DataPengelompokan;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class PembentukanClusterBLM extends javax.swing.JFrame {

    /**
     * Creates new form Pelatihan
     */
    
    private int nData, nAttribut;
    private double[][] dataWargaAtt;
    private DataKelayakan[] dataKelayakan;
    private FPSO_FCM fpso_fcm;
    private FCM fcm;
    
    public PembentukanClusterBLM() {
        initComponents();
        nData = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_FPSO_FCM = new javax.swing.JButton();
        B_FCM = new javax.swing.JButton();
        PembentukanCLusterBLM = new javax.swing.JLabel();
        Browse = new javax.swing.JButton();
        HasilFPSO_FCM = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelPengelompokanFPSO_FCM = new javax.swing.JTable();
        HasilFCM = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TabelPengelompokanFCM = new javax.swing.JTable();
        maxFPSO_FCM = new javax.swing.JLabel();
        maxFCM = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        B_FPSO_FCM.setText("FPSO_FCM Proses");
        B_FPSO_FCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_FPSO_FCMActionPerformed(evt);
            }
        });

        B_FCM.setText("FCM Proses");
        B_FCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_FCMActionPerformed(evt);
            }
        });

        PembentukanCLusterBLM.setFont(new java.awt.Font("Andalus", 0, 30)); // NOI18N
        PembentukanCLusterBLM.setText("Pembentukan CLuster BLM ");

        Browse.setText("Browse File Excel");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        HasilFPSO_FCM.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        HasilFPSO_FCM.setText("Hasil Pemrosesan FPSO-FCM");

        TabelPengelompokanFPSO_FCM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Keterangan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TabelPengelompokanFPSO_FCM);

        HasilFCM.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        HasilFCM.setText("Hasil Pemrosesan FCM");

        TabelPengelompokanFCM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Keterangan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(TabelPengelompokanFCM);

        maxFPSO_FCM.setText("Maksimum Iterasi : ");

        maxFCM.setText("Maksimum Iterasi : ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(307, 307, 307)
                                .addComponent(HasilFCM))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(maxFPSO_FCM)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maxFCM)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(maxFPSO_FCM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HasilFCM)
                .addGap(10, 10, 10)
                .addComponent(maxFCM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Browse)
                        .addGap(383, 383, 383)
                        .addComponent(B_FPSO_FCM, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(B_FCM, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(HasilFPSO_FCM)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PembentukanCLusterBLM)
                        .addGap(224, 224, 224))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PembentukanCLusterBLM)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Browse, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_FPSO_FCM, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_FCM, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HasilFPSO_FCM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_FPSO_FCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_FPSO_FCMActionPerformed
        // TODO add your handling code here:
        int i, maxIter;
        
        fpso_fcm = new FPSO_FCM(0.3, 0.2, 2, 2, 2, 100, 2);
        fpso_fcm.inisialisasiData(dataWargaAtt);
        fpso_fcm.setFPSO_FCM();
        maxIter = fpso_fcm.getMaxIterasi();
        
        maxFPSO_FCM.setText("Maksimum iterasi FPSO-FCM : "+maxIter);
        
        ArrayList<DataPengelompokan> dataPengelompokanTemps;
        ArrayList<DataPengelompokan> dataPengelompokans;
        DataPengelompokan dataPengelompokan;
        
        
        dataPengelompokanTemps = fpso_fcm.getDataPengelompokan();
        dataPengelompokans = new ArrayList<>();
        
        for(i=0; i<nData; i++){
            dataPengelompokan = dataPengelompokanTemps.get(i);
            dataPengelompokan.setNama(dataKelayakan[i].getNama());
            dataPengelompokans.add(dataPengelompokan);
        }
        
        String[] row = new String[3];
        DefaultTableModel Tabel_Pengelompokan_Model = (DefaultTableModel) TabelPengelompokanFPSO_FCM.getModel();
        
        int nLayak;
        nLayak = 1;
        
        for(i=0; i<nData; i++){
            row[0] = String.valueOf(nLayak);
            row[1] = dataPengelompokans.get(i).getNama();
            row[2] = dataPengelompokans.get(i).getKeterangan();

            Tabel_Pengelompokan_Model.addRow(row);
            nLayak = nLayak+1;
        }
    }//GEN-LAST:event_B_FPSO_FCMActionPerformed

    private void B_FCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_FCMActionPerformed
        // TODO add your handling code here:
        int i, maxIter;
        fcm = new FCM(100, 0.0000005, 3);
        
        fcm.inisialisasiData(dataWargaAtt);
        fcm.setFCM();
        maxIter = fcm.getMaxIterFCM();
        maxFCM.setText("Maksimum iterasi FCM : "+maxIter);
        
        ArrayList<DataPengelompokan> dataPengelompokanTemps;
        ArrayList<DataPengelompokan> dataPengelompokans;
        DataPengelompokan dataPengelompokan;
        
        
        dataPengelompokanTemps = fcm.getDataPengelompokan();
        dataPengelompokans = new ArrayList<>();
        
        for(i=0; i<nData; i++){
            dataPengelompokan = dataPengelompokanTemps.get(i);
            dataPengelompokan.setNama(dataKelayakan[i].getNama());
            dataPengelompokans.add(dataPengelompokan);
        }
        
        String[] row = new String[3];
        DefaultTableModel Tabel_Pengelompokan_Model = (DefaultTableModel) TabelPengelompokanFCM.getModel();
        
        int nLayak;
        nLayak = 1;
        
        for(i=0; i<nData; i++){
            row[0] = String.valueOf(nLayak);
            row[1] = dataPengelompokans.get(i).getNama();
            row[2] = dataPengelompokans.get(i).getKeterangan();

            Tabel_Pengelompokan_Model.addRow(row);
            nLayak = nLayak+1;
        }
    }//GEN-LAST:event_B_FCMActionPerformed

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed
        // TODO add your handling code here:
        int i,j;
        ArrayList<ArrayList> data;
        
        DokumenManager dokManager = new DokumenManager();
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        
        if(result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file : " + selectedFile.getAbsolutePath());
            String FILE_NAME = selectedFile.getAbsolutePath();
            data = dokManager.get_data(FILE_NAME);
            
            nData = data.size()-1;
            nAttribut = data.get(0).size()-5;
            
            dataWargaAtt = new double[nData][nAttribut];
            String[][] dataWarga = new String[nData][nAttribut];
            String[][] dataWargaInfo = new String[nData][5];
            dataKelayakan = new DataKelayakan[nData];
            //System.out.println(data.size());
            
            for(i=0; i<nData; i++){
                //System.out.println("Data ke-" + i + ": ");
                for(j=0; j<5; j++){
                    dataWargaInfo[i][j] = data.get(i+1).get(j).toString();
                }
                
                for(j=0; j<nAttribut; j++){
                    dataWarga[i][j] = data.get(i+1).get(j+5).toString();
                    
                    try {
                        dataWargaAtt[i][j] = Double.parseDouble(dataWarga[i][j]);
                    } catch (NumberFormatException numberFormatException) {
                        JOptionPane.showMessageDialog(null, "Proses pemuatan data excel gagal karena data bukan berupa angka");
                        //return;
                    }
                    //System.out.println(dataWarga[i][j]);
                }
                //System.out.println();
                dataKelayakan[i] = new DataKelayakan();
                
                dataKelayakan[i].setId(i);
                dataKelayakan[i].setNama(dataWargaInfo[i][1]);
                dataKelayakan[i].setJenisKelamin(dataWargaInfo[i][2]);
                dataKelayakan[i].setAlamat(dataWargaInfo[i][3]);
                dataKelayakan[i].setPekerjaan(dataWargaInfo[i][4]);
                dataKelayakan[i].setUsia(dataWargaAtt[i][0]);
            }
        }
    }//GEN-LAST:event_BrowseActionPerformed

    public int getNData(){
        return nData;
    }
    
    public DataKelayakan[] getDataKelayakan(){
        return dataKelayakan;
    }
    
    public double[][] getDataWarga(){
        return dataWargaAtt;
    }
    
    public FPSO_FCM getFPSO_FCM(){
        return fpso_fcm;
    }
    
    public FCM getFCM(){
        return fcm;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PembentukanClusterBLM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PembentukanClusterBLM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PembentukanClusterBLM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PembentukanClusterBLM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PembentukanClusterBLM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_FCM;
    private javax.swing.JButton B_FPSO_FCM;
    private javax.swing.JButton Browse;
    private javax.swing.JLabel HasilFCM;
    private javax.swing.JLabel HasilFPSO_FCM;
    private javax.swing.JLabel PembentukanCLusterBLM;
    private javax.swing.JTable TabelPengelompokanFCM;
    private javax.swing.JTable TabelPengelompokanFPSO_FCM;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel maxFCM;
    private javax.swing.JLabel maxFPSO_FCM;
    // End of variables declaration//GEN-END:variables
}
